{"version":3,"file":"react-tinacms-inline.cjs.development.js","sources":["../src/inline-form.tsx","../src/inline-field-context.tsx","../src/inline-field.tsx","../src/styles/input-focus-wrapper.tsx","../src/blocks/add-block-menu.tsx","../src/blocks/inline-field-blocks.tsx","../src/styles/focus-ring.tsx","../src/fields/inline-text-field.tsx","../src/fields/inline-textarea-field.tsx","../src/fields/inline-image-field.tsx","../src/blocks/inline-block-field-controls.tsx","../src/inline-settings.tsx","../src/inline-group/inline-group-controls.tsx","../src/inline-group/inline-group.tsx","../src/blocks/inline-block-text.tsx","../src/blocks/inline-block-field.tsx","../src/blocks/inline-block-textarea.tsx","../src/blocks/inline-block-image.tsx"],"sourcesContent":["/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { FormRenderProps } from 'react-final-form'\nimport { FormBuilder, Form } from 'tinacms'\nimport { Dismissible } from 'react-dismissible'\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd'\n\nexport interface InlineFormProps {\n  form: Form\n  children: React.ReactElement | React.ReactElement[] | InlineFormRenderChild\n}\n\nexport interface InlineFormRenderChild {\n  (props: InlineFormRenderChildOptions):\n    | React.ReactElement\n    | React.ReactElement[]\n}\n\nexport type InlineFormRenderChildOptions = InlineFormState &\n  Omit<FormRenderProps<any>, 'form'>\n\nexport interface InlineFormState {\n  form: Form\n  focussedField: string\n  setFocussedField(field: string): void\n}\n\nexport function InlineForm({ form, children }: InlineFormProps) {\n  const [focussedField, setFocussedField] = React.useState<string>('')\n\n  const inlineFormState = React.useMemo(() => {\n    return {\n      form,\n      focussedField,\n      setFocussedField,\n    }\n  }, [form, focussedField])\n\n  const moveArrayItem = React.useCallback(\n    (result: DropResult) => {\n      if (!result.destination || !form) return\n      const name = result.type\n      const from = result.source.index\n      const to = result.destination.index\n\n      setFocussedField(`${name}.${to}`)\n      form.mutators.move(name, from, to)\n    },\n    [form]\n  )\n\n  return (\n    <InlineFormContext.Provider value={inlineFormState}>\n      <Dismissible\n        disabled={!focussedField}\n        click\n        allowClickPropagation\n        onDismiss={() => setFocussedField('')}\n      >\n        <DragDropContext onDragEnd={moveArrayItem}>\n          <div onClick={() => setFocussedField('')}>\n            <FormBuilder form={form}>\n              {({ form, ...formProps }) => {\n                if (typeof children !== 'function') {\n                  return children\n                }\n\n                return children({\n                  ...formProps,\n                  ...inlineFormState,\n                })\n              }}\n            </FormBuilder>\n          </div>\n        </DragDropContext>\n      </Dismissible>\n    </InlineFormContext.Provider>\n  )\n}\n\nexport const InlineFormContext = React.createContext<InlineFormState | null>(\n  null\n)\n\nexport function useInlineForm() {\n  const inlineFormContext = React.useContext(InlineFormContext)\n\n  if (!inlineFormContext) {\n    throw new Error('useInlineForm must be within an InlineFormContext')\n  }\n\n  return inlineFormContext\n}\n","import React from 'react'\n\n/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\nexport interface InlineFieldState {\n  name?: string\n  [key: string]: any\n}\n\nexport const InlineFieldContext = React.createContext<InlineFieldState>({})\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { useContext } from 'react'\nimport { Field, FieldRenderProps } from 'react-final-form'\nimport { InlineFormState, useInlineForm } from './inline-form'\nimport { InlineFieldContext } from './inline-field-context'\n\nexport interface InlineFieldProps {\n  name: string\n  children(fieldProps: InlineFieldRenderProps): React.ReactElement\n}\n\nexport interface InlineFieldRenderProps<V = any>\n  extends FieldRenderProps<V>,\n    InlineFormState {}\n\nexport function InlineField({ name, children }: InlineFieldProps) {\n  const formState = useInlineForm()\n\n  let fieldName = name\n\n  const parentField = useContext(InlineFieldContext)\n\n  if (parentField.name) {\n    fieldName = `${parentField.name}.${name}`\n  }\n\n  return (\n    <Field name={fieldName}>\n      {fieldProps => {\n        return children({\n          ...fieldProps,\n          ...formState,\n        })\n      }}\n    </Field>\n  )\n}\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport styled from 'styled-components'\n\nexport const InputFocusWrapper = styled.div`\n  position: relative;\n\n  &:focus-within {\n    &:after {\n      opacity: 1;\n    }\n  }\n\n  &:hover:not(:focus-within) {\n    &:after {\n      opacity: 0.3;\n    }\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: -16px;\n    top: -16px;\n    width: calc(100% + 32px);\n    height: calc(100% + 32px);\n    border: 1px solid var(--tina-color-primary);\n    border-radius: var(--tina-radius-big);\n    opacity: 0;\n    pointer-events: none;\n    transition: all var(--tina-timing-medium) ease-out;\n  }\n`\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport { BlockTemplate } from 'tinacms'\nimport { IconButton } from '@tinacms/styles'\nimport { AddIcon } from '@tinacms/icons'\n\nimport { getOffset, getOffsetX, getOffsetY } from '../styles'\n\ninterface AddBlockMenuProps {\n  addBlock(data: any): void\n  blocks: { [key: string]: { template: BlockTemplate } }\n  position?: 'top' | 'bottom' | 'left' | 'right'\n  index?: number\n  offset?: number | { x: number; y: number }\n}\n\nexport function AddBlockMenu({\n  blocks,\n  addBlock,\n  position,\n  index,\n  offset,\n}: AddBlockMenuProps) {\n  const [isOpen, setIsOpen] = React.useState(false)\n  const addBlockButtonRef = React.useRef<HTMLButtonElement>(null)\n  const [openTop, setOpenTop] = React.useState(false)\n\n  const handleOpenBlockMenu = (event: any) => {\n    event.stopPropagation()\n    event.preventDefault()\n    const addBlockButtonElem = addBlockButtonRef.current\n\n    if (addBlockButtonElem !== null) {\n      const menuBounding = addBlockButtonElem.getBoundingClientRect()\n      const halfWindowHeight =\n        (window.innerHeight || document.documentElement.clientHeight) / 2\n      const offsetTop = menuBounding.top\n\n      if (offsetTop < halfWindowHeight) {\n        setOpenTop(false)\n      } else {\n        setOpenTop(true)\n      }\n    }\n\n    if (Object.keys(blocks).length == 1) {\n      const blockId = Object.keys(blocks)[0]\n      addBlock({\n        _template: blockId,\n        ...blocks[blockId].template.defaultItem,\n      })\n    } else {\n      setIsOpen(isOpen => !isOpen)\n    }\n  }\n\n  React.useEffect(() => {\n    const inactivateBlockMenu = () => setIsOpen(false)\n    document.addEventListener('mouseup', inactivateBlockMenu, false)\n    return () => document.removeEventListener('mouseup', inactivateBlockMenu)\n  }, [])\n\n  return (\n    <AddBlockWrapper\n      index={index}\n      offset={offset}\n      position={position}\n      isOpen={isOpen}\n    >\n      <AddBlockButton\n        ref={addBlockButtonRef}\n        onClick={handleOpenBlockMenu}\n        isOpen={isOpen}\n        primary\n        small\n      >\n        <AddIcon />\n      </AddBlockButton>\n      <BlocksMenu openTop={openTop} isOpen={isOpen}>\n        {Object.keys(blocks).map((key: string) => {\n          const template = blocks[key].template\n          return (\n            <BlockOption\n              key={template.label}\n              onClick={event => {\n                event.stopPropagation()\n                event.preventDefault()\n                addBlock({\n                  _template: key,\n                  ...template.defaultItem,\n                })\n              }}\n            >\n              {template.label}\n            </BlockOption>\n          )\n        })}\n      </BlocksMenu>\n    </AddBlockWrapper>\n  )\n}\n\ninterface AddMenuProps {\n  isOpen?: boolean\n  active?: boolean\n  openTop?: boolean\n}\n\nconst AddBlockButton = styled(IconButton)<AddMenuProps>`\n  font-family: 'Inter', sans-serif;\n  display: flex;\n  align-items: center;\n\n  &:focus {\n    outline: none !important;\n  }\n\n  svg {\n    transition: all 150ms ease-out;\n  }\n\n  ${props =>\n    props.isOpen &&\n    css`\n      pointer-events: none;\n\n      svg {\n        transform: rotate(45deg);\n      }\n    `};\n`\n\ninterface AddBlockWrapperProps {\n  index?: number\n  offset?: number | { x: number; y: number }\n  position?: 'top' | 'bottom' | 'left' | 'right'\n  isOpen: boolean\n}\n\nconst AddBlockWrapper = styled.div<AddBlockWrapperProps>(p => {\n  const offset = getOffset(p.offset)\n\n  return css`\n  position: absolute;\n  z-index: calc(var(--tina-z-index-2) - ${p.index !== undefined ? p.index : 0});\n\n\n  ${p.position === 'top' &&\n    css`\n      top: calc(-1 * ${getOffsetY(offset)}px);\n      left: 50%;\n      transform: translate3d(-50%, -50%, 0);\n    `}\n\n  ${p.position === 'left' &&\n    css`\n      top: 50%;\n      left: calc(-1 * ${getOffsetX(offset)}px);\n      transform: translate3d(-50%, -50%, 0);\n    `}\n\n  ${p.position === 'bottom' &&\n    css`\n      bottom: calc(-1 * ${getOffsetY(offset)}px);\n      left: 50%;\n      transform: translate3d(-50%, 50%, 0);\n    `}\n\n  ${p.position === 'right' &&\n    css`\n      top: 50%;\n      right: calc(-1 * ${getOffsetX(offset)}px);\n      transform: translate3d(50%, -50%, 0);\n    `}\n\n  ${p.position === undefined &&\n    css`\n      position: relative;\n    `}\n\n  ${p.isOpen &&\n    css`\n      z-index: calc(1 + var(--tina-z-index-2) - ${p.index ? p.index : 0});\n    `}\n`\n})\n\nconst BlocksMenu = styled.div<AddMenuProps>`\n  min-width: 192px;\n  border-radius: var(--tina-radius-big);\n  border: 1px solid var(--tina-color-grey-2);\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: flex-start;\n  position: absolute;\n  z-index: var(--tina-z-index-2);\n  top: 20px;\n  left: 50%;\n  transform: translate3d(-50%, 0, 0) scale3d(0.5, 0.5, 1);\n  opacity: 0;\n  pointer-events: none;\n  transition: all 150ms ease-out;\n  transform-origin: 50% 0;\n  box-shadow: var(--tina-shadow-big);\n  background-color: white;\n  overflow: hidden;\n\n  ${props =>\n    props.isOpen &&\n    css`\n      opacity: 1;\n      pointer-events: all;\n      transform: translate3d(-50%, 16px, 0) scale3d(1, 1, 1);\n    `};\n\n  ${props =>\n    props.openTop &&\n    css`\n      top: auto;\n      bottom: 20px;\n      transform-origin: 50% 100%;\n\n      ${props.isOpen &&\n        css`\n          transform: translate3d(-50%, -16px, 0) scale3d(1, 1, 1);\n        `};\n    `};\n`\n\nconst BlockOption = styled.button`\n  font-family: 'Inter', sans-serif;\n  position: relative;\n  text-align: center;\n  font-size: var(--tina-font-size-1);\n  padding: 0 12px;\n  height: 34px;\n  font-weight: var(--tina-font-weight-regular);\n  width: 100%;\n  background: none;\n  cursor: pointer;\n  outline: none;\n  border: 0;\n  transition: all 85ms ease-out;\n  user-select: none;\n\n  &:hover {\n    color: var(--tina-color-primary);\n    background-color: #f6f6f9;\n  }\n  &:not(:last-child) {\n    border-bottom: 1px solid #efefef;\n  }\n`\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { Block } from './block'\nimport { InlineField } from '../inline-field'\nimport { useState } from 'react'\nimport { AddBlockMenu } from './add-block-menu'\nimport { useInlineForm } from '../inline-form'\nimport styled from 'styled-components'\nimport { InlineFieldContext } from '../inline-field-context'\nimport { useCMS } from 'tinacms'\nimport { Droppable } from 'react-beautiful-dnd'\n\nexport interface InlineBlocksProps {\n  name: string\n  blocks: {\n    [key: string]: Block\n  }\n  className?: string\n  direction?: 'column' | 'row'\n}\n\nexport interface InlineBlocksActions {\n  count: number\n  insert(index: number, data: any): void\n  move(from: number, to: number): void\n  remove(index: number): void\n  blocks: {\n    [key: string]: Block\n  }\n  activeBlock: number | null\n  setActiveBlock: any\n  direction: 'column' | 'row'\n}\n\nexport const InlineBlocksContext = React.createContext<InlineBlocksActions | null>(\n  null\n)\n\nexport function useInlineBlocks() {\n  const inlineBlocksContext = React.useContext(InlineBlocksContext)\n\n  if (!inlineBlocksContext) {\n    throw new Error('useInlineBlocks must be within an InlineBlocksContext')\n  }\n\n  return inlineBlocksContext\n}\n\nexport function InlineBlocks({\n  name,\n  blocks,\n  className,\n  direction = 'column',\n}: InlineBlocksProps) {\n  const cms = useCMS()\n  const [activeBlock, setActiveBlock] = useState(-1)\n  const { setFocussedField } = useInlineForm()\n\n  return (\n    <InlineField name={name}>\n      {({ input, form }) => {\n        const name = input.name\n        const allData: { _template: string }[] = input.value || []\n\n        const move = (from: number, to: number) => {\n          const movement = to - from\n          setActiveBlock(activeBlock => activeBlock + movement)\n          form.mutators.move(name, from, to)\n          setFocussedField(`${name}.${to}`)\n        }\n\n        const remove = (index: number) => {\n          form.mutators.remove(name, index)\n\n          const isOnlyItem = input.value.length === 1\n          const isLastItem = input.value.length - 1 === index\n\n          if (isOnlyItem) {\n            setFocussedField('')\n          } else if (isLastItem) {\n            setFocussedField(`${input.name}.${index - 1}`)\n          } else {\n            setFocussedField(`${input.name}.${index}`)\n          }\n        }\n\n        const insert = (index: number, block: any) => {\n          form.mutators.insert(name, index, block)\n          setFocussedField(`${name}.${index}`)\n        }\n\n        return (\n          <Droppable\n            droppableId={name}\n            type={name}\n            direction={direction === 'column' ? 'vertical' : 'horizontal'}\n          >\n            {provider => (\n              <div ref={provider.innerRef} className={className}>\n                {\n                  <InlineBlocksContext.Provider\n                    value={{\n                      insert,\n                      move,\n                      remove,\n                      blocks,\n                      count: allData.length,\n                      activeBlock,\n                      setActiveBlock,\n                      direction,\n                    }}\n                  >\n                    {allData.length < 1 && cms.enabled && (\n                      <BlocksEmptyState>\n                        <AddBlockMenu\n                          addBlock={block => insert(0, block)}\n                          blocks={blocks}\n                        />\n                      </BlocksEmptyState>\n                    )}\n\n                    {allData.map((data, index) => {\n                      const Block = blocks[data._template]\n\n                      if (!Block) {\n                        console.warn(\n                          'Unrecognized Block of type:',\n                          data._template\n                        )\n                        return null\n                      }\n\n                      const blockName = `${input.name}.${index}`\n\n                      return (\n                        <InlineBlock\n                          index={index}\n                          name={blockName}\n                          data={data}\n                          block={Block}\n                        />\n                      )\n                    })}\n                    {provider.placeholder}\n                  </InlineBlocksContext.Provider>\n                }\n              </div>\n            )}\n          </Droppable>\n        )\n      }}\n    </InlineField>\n  )\n}\n\n/**\n * InlineBlock\n */\nexport interface InlineBlockProps {\n  index: number\n  name: string\n  data: any\n  block: Block\n}\n\nexport function InlineBlock({ name, data, block, index }: InlineBlockProps) {\n  return (\n    <InlineFieldContext.Provider value={{ name, ...block }}>\n      <block.Component data={data} index={index} />\n    </InlineFieldContext.Provider>\n  )\n}\n\nexport const BlocksEmptyState = styled.div`\n  padding: var(--tina-padding-small);\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\nimport styled, { css } from 'styled-components'\nimport { BlocksEmptyState } from '../blocks/inline-field-blocks'\n\nexport interface FocusRingStyleProps {\n  offset?: number | { x: number; y: number }\n  borderRadius?: number\n}\n\ninterface FocusRingProps extends FocusRingStyleProps {\n  active: boolean\n  disableHover?: boolean\n  disableChildren?: boolean\n}\n\nexport const FocusRing = styled.div<FocusRingProps>(p => {\n  const offset = getOffset(p.offset)\n\n  return css`\n    position: relative;\n    width: 100%;\n\n    ${!p.disableHover &&\n      css`\n        &:hover {\n          &:after {\n            opacity: 0.3;\n          }\n        }\n      `}\n\n    ${p.disableChildren &&\n      css`\n        > * {\n          pointer-events: none;\n        }\n\n        ${BlocksEmptyState} {\n          opacity: 0;\n          pointer-events: none;\n        }\n      `}\n\n    &:after {\n      content: '';\n      box-sizing: border-box;\n      display: block;\n      position: absolute;\n      left: calc(-1 * ${getOffsetX(offset)}px);\n      top: calc(-1 * ${getOffsetY(offset)}px);\n      width: calc(100% + ${getOffsetX(offset) * 2}px);\n      height: calc(100% + ${getOffsetY(offset) * 2}px);\n      border: 1px solid var(--tina-color-primary);\n      border-radius: ${p.borderRadius !== undefined ? p.borderRadius : `10`}px;\n      opacity: 0;\n      pointer-events: none;\n      transition: all var(--tina-timing-medium) ease-out;\n      box-shadow: var(--tina-shadow-big);\n    }\n\n    ${p.active &&\n      css`\n        &:hover:after,\n        &:after {\n          opacity: 1;\n        }\n      `};\n  `\n})\n\nexport function getOffset(\n  offset: number | undefined | { x: number; y: number }\n): number | { x: number; y: number } {\n  const DEFAULT_OFFSET: number = 16\n  let result: number | { x: number; y: number } = DEFAULT_OFFSET\n  const axis = { x: DEFAULT_OFFSET, y: DEFAULT_OFFSET }\n\n  if (typeof offset === 'number') {\n    result = offset\n  } else if (typeof offset === 'object') {\n    axis.x = offset.x\n    axis.y = offset.y\n    result = axis\n  }\n\n  return result\n}\n\nexport const getOffsetX = (offset: number | { x: number; y: number }): number =>\n  typeof offset === 'object' ? offset.x : offset\n\nexport const getOffsetY = (offset: number | { x: number; y: number }): number =>\n  typeof offset === 'object' ? offset.y : offset\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport { useCMS, CMS } from 'tinacms'\nimport { InlineField } from '../inline-field'\nimport { InputFocusWrapper } from '../styles'\n\nexport interface InlineTextProps {\n  name: string\n  className?: string\n  focusRing?: boolean\n}\n\n/**\n * @deprecated\n * @alias InlineText\n */\nexport const InlineTextField = InlineText\n\nexport function InlineText({\n  name,\n  className,\n  focusRing = true,\n}: InlineTextProps) {\n  const cms: CMS = useCMS()\n\n  return (\n    <InlineField name={name}>\n      {({ input }) => {\n        if (cms.enabled) {\n          if (!focusRing) {\n            return <Input type=\"text\" {...input} className={className} />\n          }\n\n          return (\n            <InputFocusWrapper>\n              <Input type=\"text\" {...input} className={className} />\n            </InputFocusWrapper>\n          )\n        }\n        return <>{input.value}</>\n      }}\n    </InlineField>\n  )\n}\n\nconst Input = styled.input`\n  width: 100%;\n  display: block;\n  font-size: inherit;\n  font-family: inherit;\n  font-weight: inherit;\n  box-sizing: border-box;\n  color: inherit;\n  letter-spacing: inherit;\n  line-height: inherit;\n  max-width: inherit;\n  background-color: inherit;\n  text-align: inherit;\n  outline: none;\n  resize: none;\n  border: none;\n  overflow: visible;\n  position: relative;\n  -ms-overflow-style: none;\n`\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { useCMS } from 'tinacms'\nimport { InlineField } from '../inline-field'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport { InlineTextProps } from './inline-text-field'\nimport { InputFocusWrapper } from '../styles'\n\n/**\n * @deprecated\n * @alias InlineTextarea\n */\nexport const InlineTextareaField = InlineTextarea\n\nexport function InlineTextarea({\n  name,\n  className,\n  focusRing = true,\n}: InlineTextProps) {\n  const cms = useCMS()\n\n  return (\n    <InlineField name={name}>\n      {({ input }) => {\n        if (cms.enabled) {\n          if (!focusRing) {\n            return <Textarea className={className} {...input} rows={1} />\n          }\n\n          return (\n            <InputFocusWrapper>\n              <Textarea className={className} {...input} rows={1} />\n            </InputFocusWrapper>\n          )\n        }\n        return <>{input.value}</>\n      }}\n    </InlineField>\n  )\n}\n\nconst Textarea = styled(TextareaAutosize)`\n  width: 100%;\n  word-wrap: break-word;\n  display: block;\n  font-size: inherit;\n  font-family: inherit;\n  font-weight: inherit;\n  box-sizing: border-box;\n  color: inherit;\n  letter-spacing: inherit;\n  line-height: inherit;\n  margin: 0 auto;\n  max-width: inherit;\n  background-color: inherit;\n  text-align: inherit;\n  outline: none;\n  resize: none;\n  border: none;\n  overflow: visible;\n  position: relative;\n  -ms-overflow-style: none;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { InlineField } from '../inline-field'\nimport { useCMS, Form } from 'tinacms'\nimport { useDropzone } from 'react-dropzone'\nimport { InputFocusWrapper } from '../styles'\n\nexport interface InlineImageProps {\n  name: string\n  previewSrc(formValues: any): string\n  parse(filename: string): string\n  uploadDir(form: Form): string\n  focusRing?: boolean\n  children?: any\n}\n\n/**\n * @deprecated\n * @alias InlineImage\n */\nexport const InlineImageField = InlineImage\n\nexport function InlineImage({\n  name,\n  previewSrc,\n  uploadDir,\n  parse,\n  children,\n  focusRing = true,\n}: InlineImageProps) {\n  const cms = useCMS()\n\n  return (\n    <InlineField name={name}>\n      {({ input, form }) => {\n        const _previewSrc = previewSrc(form.finalForm.getState().values)\n\n        async function handleUploadImage([file]: File[]) {\n          const directory = uploadDir(form)\n          const [media] = await cms.media.store.persist([\n            {\n              directory,\n              file,\n            },\n          ])\n          if (media?.filename) {\n            input.onChange(parse(media.filename))\n          } else {\n            console.error(\n              'TinaCMS Image Upload Failed: This could be due to media store configuration, file size, or if the image is a duplicate (has already been uploaded).'\n            )\n            cms.alerts.error('Image Upload Failed.')\n          }\n          return null\n        }\n\n        if (cms.enabled) {\n          if (!focusRing) {\n            return (\n              <InlineImageUpload\n                value={input.value}\n                previewSrc={_previewSrc}\n                onDrop={handleUploadImage}\n                {...input}\n              >\n                {children &&\n                  ((props: any) =>\n                    children({ previewSrc: _previewSrc }, ...props))}\n              </InlineImageUpload>\n            )\n          }\n          return (\n            <InputFocusWrapper>\n              <InlineImageUpload\n                value={input.value}\n                previewSrc={_previewSrc}\n                onDrop={handleUploadImage}\n                {...input}\n              >\n                {/** If children, pass previewSrc to children */}\n                {children &&\n                  ((props: any) =>\n                    children({ previewSrc: _previewSrc }, ...props))}\n              </InlineImageUpload>\n            </InputFocusWrapper>\n          )\n        }\n        return children ? children() : <img src={input.value} />\n      }}\n    </InlineField>\n  )\n}\n\ninterface InlineImageUploadProps {\n  onDrop: (acceptedFiles: any[]) => void\n  value?: string\n  children?: any\n  previewSrc?: string\n}\n\nfunction InlineImageUpload({\n  onDrop,\n  value,\n  previewSrc,\n  children,\n}: InlineImageUploadProps) {\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    onDrop,\n  })\n\n  if (!value) return <ImagePlaceholder />\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      <div>{children ? children(previewSrc) : <img src={previewSrc} />}</div>\n    </div>\n  )\n}\n\nfunction ImagePlaceholder() {\n  // TODO: style this component\n  return (\n    <div>\n      Drag 'n' drop some files here,\n      <br />\n      or click to select files\n    </div>\n  )\n}\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport {\n  ChevronUpIcon,\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  TrashIcon,\n  ReorderIcon,\n  ReorderRowIcon,\n} from '@tinacms/icons'\nimport { useCMS } from 'tinacms'\nimport { Draggable } from 'react-beautiful-dnd'\n\nimport { useInlineBlocks } from './inline-field-blocks'\nimport { useInlineForm } from '../inline-form'\nimport { AddBlockMenu } from './add-block-menu'\nimport { InlineSettings } from '../inline-settings'\nimport { InlineFieldContext } from '../inline-field-context'\nimport { FocusRing } from '../styles'\nimport {\n  FocusRingStyleProps,\n  getOffset,\n  getOffsetX,\n  getOffsetY,\n} from '../styles'\n\nexport interface BlocksControlsProps {\n  children: any\n  index: number\n  insetControls?: boolean\n  focusRing?: false | FocusRingStyleProps\n}\n\nexport function BlocksControls({\n  children,\n  index,\n  insetControls,\n  focusRing = {},\n}: BlocksControlsProps) {\n  const cms = useCMS()\n  const { focussedField, setFocussedField } = useInlineForm()\n  const { name, template } = React.useContext(InlineFieldContext)\n  const { insert, move, remove, blocks, count, direction } = useInlineBlocks()\n  const isFirst = index === 0\n  const isLast = index === count - 1\n  const blockMenuRef = React.useRef<HTMLDivElement>(null)\n  const blockMoveUpRef = React.useRef<HTMLButtonElement>(null)\n  const blockMoveDownRef = React.useRef<HTMLButtonElement>(null)\n\n  const addBeforePosition =\n    direction === 'column' ? 'top' : direction === 'row' ? 'left' : 'top'\n  const addAfterPosition =\n    direction === 'column' ? 'bottom' : direction === 'row' ? 'right' : 'bottom'\n\n  if (cms.disabled) {\n    return children\n  }\n\n  const removeBlock = (event: any) => {\n    event.stopPropagation()\n    event.preventDefault()\n    remove(index)\n  }\n\n  const moveBlockUp = (event: any) => {\n    move(index, index - 1)\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  const moveBlockDown = (event: any) => {\n    move(index, index + 1)\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  const isActive = name === focussedField\n  const childIsActive = focussedField.startsWith(name!)\n\n  const handleSetActiveBlock = (event: any) => {\n    if (\n      blockMenuRef.current?.contains(event.target) ||\n      blockMoveUpRef.current?.contains(event.target) ||\n      blockMoveDownRef.current?.contains(event.target)\n    ) {\n      return\n    }\n    event.stopPropagation()\n    event.preventDefault()\n    setFocussedField(name!)\n  }\n\n  const offset = typeof focusRing === 'object' ? focusRing.offset : undefined\n\n  const parentName = name!\n    .split('.')\n    .slice(0, -1)\n    .join('.')\n\n  return (\n    <Draggable type={parentName} draggableId={name!} index={index}>\n      {provider => {\n        return (\n          <FocusRing\n            ref={provider.innerRef}\n            active={focusRing && isActive}\n            onClick={handleSetActiveBlock}\n            offset={offset}\n            borderRadius={\n              typeof focusRing === 'object' ? focusRing.borderRadius : undefined\n            }\n            disableHover={focusRing === false ? true : childIsActive}\n            {...provider.draggableProps}\n            disableChildren={!isActive && !childIsActive}\n          >\n            <AddBlockMenuWrapper active={isActive}>\n              <AddBlockMenu\n                addBlock={block => insert(index, block)}\n                blocks={blocks}\n                index={index}\n                offset={offset}\n                position={addBeforePosition}\n              />\n              <AddBlockMenu\n                addBlock={block => insert(index + 1, block)}\n                blocks={blocks}\n                index={index}\n                offset={offset}\n                position={addAfterPosition}\n              />\n            </AddBlockMenuWrapper>\n            <BlockMenuWrapper\n              offset={offset}\n              ref={blockMenuRef}\n              index={index}\n              active={isActive}\n              inset={insetControls}\n            >\n              <BlockMenu>\n                <BlockAction\n                  ref={blockMoveUpRef}\n                  onClick={moveBlockUp}\n                  disabled={isFirst}\n                >\n                  {direction === 'column' && <ChevronUpIcon />}\n                  {direction === 'row' && <ChevronLeftIcon />}\n                </BlockAction>\n                <BlockAction\n                  ref={blockMoveDownRef}\n                  onClick={moveBlockDown}\n                  disabled={isLast}\n                >\n                  {direction === 'column' && <ChevronDownIcon />}\n                  {direction === 'row' && <ChevronRightIcon />}\n                </BlockAction>\n                <BlockAction {...provider.dragHandleProps}>\n                  {direction === 'column' && <ReorderIcon />}\n                  {direction === 'row' && <ReorderRowIcon />}\n                </BlockAction>\n                <InlineSettings fields={template.fields} />\n                <BlockAction onClick={removeBlock}>\n                  <TrashIcon />\n                </BlockAction>\n              </BlockMenu>\n            </BlockMenuWrapper>\n            {children}\n          </FocusRing>\n        )\n      }}\n    </Draggable>\n  )\n}\n\ninterface AddBlockMenuWrapperProps {\n  active: boolean\n}\n\nconst AddBlockMenuWrapper = styled.div<AddBlockMenuWrapperProps>(\n  p => css`\n    opacity: 0;\n    transition: all 120ms ease-out;\n    pointer-events: none;\n\n    ${p.active &&\n      css`\n        opacity: 1;\n        pointer-events: all;\n      `}\n  `\n)\n\ninterface BlockMenuWrapperProps {\n  index?: number\n  active: boolean\n  inset?: boolean\n  offset?: number | { x: number; y: number }\n}\n\nexport const BlockMenuWrapper = styled.div<BlockMenuWrapperProps>(p => {\n  const offset = getOffset(p.offset)\n  return css`\n    position: absolute;\n    top: calc(-${getOffsetY(offset)}px - 16px);\n    right: calc(-${getOffsetX(offset)}px - 1px);\n    opacity: 0;\n    transition: all 120ms ease-out;\n    z-index: calc(var(--tina-z-index-1) - ${p.index ? p.index : 0});\n    pointer-events: none;\n    transform: translate3d(0, -100%, 0);\n\n    ${p.inset &&\n      css`\n        top: calc(14px - ${getOffsetY(offset)}px);\n        right: calc(14px - ${getOffsetX(offset)}px);\n        transform: translate3d(0, 0, 0);\n      `}\n\n    ${p.active &&\n      css`\n        opacity: 1;\n        pointer-events: all;\n      `}\n  `\n})\n\nexport const BlockMenu = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  top: 0;\n  background-color: white;\n  border-radius: var(--tina-radius-small);\n  box-shadow: var(--tina-shadow-big);\n  border: 1px solid var(--tina-color-grey-2);\n  overflow: hidden;\n`\n\ninterface BlockActionProps {\n  active?: boolean\n  disabled?: boolean\n  onClick?: any\n  ref?: any\n}\n\nexport const BlockAction = styled.div<BlockActionProps>`\n  background-color: ${p =>\n    p.active ? 'rgba(53, 50, 50, 0.05)' : 'transparent'};\n  color: ${p =>\n    p.active ? 'var(--tina-color-primary)' : 'var(--tina-color-grey-8)'};\n  fill: ${p =>\n    p.active ? 'var(--tina-color-primary)' : 'var(--tina-color-grey-8)'};\n  outline: none;\n  border: none;\n  padding: 4px 6px;\n  transition: all 85ms ease-out;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: rgba(53, 50, 50, 0.09);\n  }\n  &:active {\n    color: var(--tina-color-primary);\n    fill: var(--tina-color-primary);\n    background-color: rgba(53, 50, 50, 0.05);\n  }\n  &:not(:last-child) {\n    border-right: 1px solid var(--tina-color-grey-2);\n  }\n  svg {\n    width: 26px;\n    height: auto;\n  }\n\n  ${props =>\n    props.active &&\n    css`\n      color: var(--tina-color-primary);\n      fill: var(--tina-color-primary);\n      background-color: rgba(53, 50, 50, 0.05);\n    `};\n\n  ${props =>\n    props.disabled &&\n    css`\n      pointer-events: none;\n      color: #d1d1d1;\n      fill: #d1d1d1;\n    `};\n`\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\nimport * as React from 'react'\nimport styled from 'styled-components'\n\nimport {\n  FieldsBuilder,\n  Modal,\n  ModalPopup,\n  ModalHeader,\n  ModalBody,\n  ModalActions,\n} from 'tinacms'\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd'\nimport { Button } from '@tinacms/styles'\nimport { EditIcon } from '@tinacms/icons'\nimport { Field } from 'tinacms'\nimport { FormPortalProvider } from '@tinacms/react-forms'\nimport { BlockAction } from './blocks/inline-block-field-controls'\nimport { InlineFieldContext } from './inline-field-context'\nimport { useInlineForm } from './inline-form'\n\ninterface InlineSettingsProps {\n  fields: Field[]\n}\n\nexport function InlineSettings({ fields }: InlineSettingsProps) {\n  const [open, setOpen] = React.useState(false)\n  const noExtraFields = !(fields && fields.length)\n\n  if (noExtraFields) {\n    return null\n  }\n\n  return (\n    <>\n      <BlockAction onClick={() => setOpen(p => !p)}>\n        <EditIcon />\n      </BlockAction>\n      {open && <SettingsModal fields={fields} close={() => setOpen(false)} />}\n    </>\n  )\n}\n\ninterface SettingsModalProps {\n  fields: Field[]\n  close(): void\n}\n\nfunction SettingsModal({ fields, close }: SettingsModalProps) {\n  const { form } = useInlineForm()\n  const { name } = React.useContext(InlineFieldContext)\n  const [initialValues] = React.useState(form.values)\n\n  function handleCancel() {\n    form.updateValues(initialValues)\n    close()\n  }\n\n  let formFields = fields\n\n  if (name) {\n    formFields = fields.map((field: any) => ({\n      ...field,\n      name: `${name}.${field.name}`,\n    }))\n  }\n  const moveArrayItem = React.useCallback(\n    (result: DropResult) => {\n      if (!result.destination || !form) return\n      const name = result.type\n      form.mutators.move(name, result.source.index, result.destination.index)\n    },\n    [form]\n  )\n  return (\n    <Modal onClick={e => e.stopPropagation()}>\n      <ModalPopup>\n        <ModalHeader close={close}>Settings</ModalHeader>\n        <ModalBody>\n          <DragDropContext onDragEnd={moveArrayItem}>\n            <FormBody>\n              <Wrapper>\n                <FieldsBuilder form={form} fields={formFields} />\n              </Wrapper>\n            </FormBody>\n          </DragDropContext>\n        </ModalBody>\n        <ModalActions>\n          <Button onClick={handleCancel}>Cancel</Button>\n          <Button\n            onClick={close}\n            disabled={form.values === initialValues}\n            primary\n          >\n            Confirm\n          </Button>\n        </ModalActions>\n      </ModalPopup>\n    </Modal>\n  )\n}\n\nconst FormBody = styled(FormPortalProvider)`\n  position: relative;\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: auto;\n  border-top: 1px solid var(--tina-color-grey-2);\n  background-color: #f6f6f9;\n`\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 0 auto;\n  width: 100%;\n`\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { useCMS } from 'tinacms'\n\nimport { InlineSettings } from '../inline-settings'\nimport { useInlineForm } from '../inline-form'\nimport { FocusRing } from '../styles'\nimport { InlineFieldContext } from '../inline-field-context'\nimport {\n  BlockMenu,\n  BlockMenuWrapper,\n} from '../blocks/inline-block-field-controls'\nimport { FocusRingStyleProps } from '../styles'\n\ninterface InlineGroupControls {\n  name: string\n  children: any\n  insetControls?: boolean\n  focusRing?: false | FocusRingStyleProps\n}\n\nexport function InlineGroupControls({\n  name,\n  children,\n  insetControls,\n  focusRing = {},\n}: InlineGroupControls) {\n  const cms = useCMS()\n  const { focussedField, setFocussedField } = useInlineForm()\n  const groupRef = React.useRef<HTMLDivElement>(null)\n  const groupMenuRef = React.useRef<HTMLDivElement>(null)\n  const { fields } = React.useContext(InlineFieldContext)\n\n  if (cms.disabled) {\n    return children\n  }\n\n  const active = name === focussedField\n  const childIsActive = focussedField.startsWith(name)\n\n  const handleSetActive = (event: any) => {\n    if (active || childIsActive) return\n    setFocussedField(name)\n    event.stopPropagation()\n    event.preventDefault()\n  }\n\n  const offset = typeof focusRing === 'object' ? focusRing.offset : undefined\n\n  return (\n    <FocusRing\n      ref={groupRef}\n      active={focusRing && active}\n      onClick={handleSetActive}\n      offset={offset}\n      borderRadius={\n        typeof focusRing === 'object' ? focusRing.borderRadius : undefined\n      }\n      disableHover={!focusRing && childIsActive}\n      disableChildren={focusRing && !active && !childIsActive}\n    >\n      <BlockMenuWrapper\n        ref={groupMenuRef}\n        offset={offset}\n        inset={insetControls}\n        active={active}\n      >\n        <BlockMenu>\n          <InlineSettings fields={fields} />\n        </BlockMenu>\n      </BlockMenuWrapper>\n      {children}\n    </FocusRing>\n  )\n}\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { Field } from 'tinacms'\n\nimport { InlineFieldContext } from '../inline-field-context'\nimport { InlineGroupControls } from './inline-group-controls'\nimport { FocusRingStyleProps } from '../styles'\n\ninterface InlineGroupProps {\n  name: string\n  fields?: Field[]\n  insetControls?: boolean\n  focusRing?: false | FocusRingStyleProps\n  children?: any\n}\n\nexport function InlineGroup({\n  name,\n  children,\n  fields = [],\n  insetControls,\n  focusRing,\n}: InlineGroupProps) {\n  return (\n    <InlineFieldContext.Provider value={{ name, fields }}>\n      <InlineGroupControls\n        name={name}\n        insetControls={insetControls}\n        focusRing={focusRing}\n      >\n        {children}\n      </InlineGroupControls>\n    </InlineFieldContext.Provider>\n  )\n}\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { InlineTextProps, InlineText } from '../fields/inline-text-field'\n\n/**\n * @deprecated\n */\nexport function BlockText(props: InlineTextProps) {\n  return <InlineText {...props} focusRing={false} />\n}\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport { InlineField, InlineFieldRenderProps } from '../inline-field'\n\nexport interface BlockFieldProps {\n  name: string\n  children(props: BlockFieldRenderProps): any\n}\n\ninterface BlockFieldRenderProps extends InlineFieldRenderProps {\n  name: string\n}\n\nexport const BlockField = InlineField\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { InlineTextProps } from '../fields/inline-text-field'\nimport { InlineTextarea } from '../fields/inline-textarea-field'\n\n/**\n * @deprecated\n */\nexport function BlockTextarea(props: InlineTextProps) {\n  return <InlineTextarea {...props} focusRing={false} />\n}\n","/**\n\nCopyright 2019 Forestry.io Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nimport * as React from 'react'\nimport { InlineImageProps, InlineImage } from '../fields/inline-image-field'\n\n/**\n * @deprecated\n */\nexport function BlockImage(props: InlineImageProps) {\n  return <InlineImage {...props} focusRing={false} />\n}\n"],"names":["InlineForm","form","children","React","focussedField","setFocussedField","inlineFormState","moveArrayItem","result","destination","name","type","from","source","index","to","mutators","move","InlineFormContext","Provider","value","Dismissible","disabled","click","allowClickPropagation","onDismiss","DragDropContext","onDragEnd","onClick","FormBuilder","formProps","useInlineForm","inlineFormContext","Error","InlineFieldContext","createContext","InlineField","formState","fieldName","parentField","useContext","Field","fieldProps","InputFocusWrapper","styled","div","AddBlockMenu","blocks","addBlock","position","offset","isOpen","setIsOpen","addBlockButtonRef","openTop","setOpenTop","handleOpenBlockMenu","event","stopPropagation","preventDefault","addBlockButtonElem","current","menuBounding","getBoundingClientRect","halfWindowHeight","window","innerHeight","document","documentElement","clientHeight","offsetTop","top","Object","keys","length","blockId","_template","template","defaultItem","inactivateBlockMenu","addEventListener","removeEventListener","AddBlockWrapper","AddBlockButton","ref","primary","small","AddIcon","BlocksMenu","map","key","BlockOption","label","IconButton","_templateObject","props","css","p","getOffset","undefined","getOffsetY","getOffsetX","button","InlineBlocksContext","useInlineBlocks","inlineBlocksContext","InlineBlocks","className","direction","cms","useCMS","useState","activeBlock","setActiveBlock","input","allData","movement","remove","isOnlyItem","isLastItem","insert","block","Droppable","droppableId","provider","innerRef","count","enabled","BlocksEmptyState","data","Block","console","warn","blockName","InlineBlock","placeholder","Component","FocusRing","disableHover","disableChildren","borderRadius","active","DEFAULT_OFFSET","axis","x","y","InlineTextField","InlineText","focusRing","Input","InlineTextareaField","InlineTextarea","Textarea","rows","TextareaAutosize","InlineImageField","InlineImage","previewSrc","uploadDir","parse","handleUploadImage","file","directory","media","store","persist","filename","onChange","error","alerts","_previewSrc","finalForm","getState","values","InlineImageUpload","onDrop","src","useDropzone","accept","getRootProps","getInputProps","ImagePlaceholder","BlocksControls","insetControls","isFirst","isLast","blockMenuRef","blockMoveUpRef","blockMoveDownRef","addBeforePosition","addAfterPosition","removeBlock","moveBlockUp","moveBlockDown","isActive","childIsActive","startsWith","handleSetActiveBlock","contains","target","parentName","split","slice","join","Draggable","draggableId","draggableProps","AddBlockMenuWrapper","BlockMenuWrapper","inset","BlockMenu","BlockAction","ChevronUpIcon","ChevronLeftIcon","ChevronDownIcon","ChevronRightIcon","dragHandleProps","ReorderIcon","ReorderRowIcon","InlineSettings","fields","TrashIcon","_templateObject6","_templateObject7","open","setOpen","noExtraFields","EditIcon","SettingsModal","close","initialValues","handleCancel","updateValues","formFields","field","Modal","e","ModalPopup","ModalHeader","ModalBody","FormBody","Wrapper","FieldsBuilder","ModalActions","Button","FormPortalProvider","_templateObject2","InlineGroupControls","groupRef","groupMenuRef","handleSetActive","InlineGroup","BlockText","BlockField","BlockTextarea","BlockImage"],"mappings":"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"}