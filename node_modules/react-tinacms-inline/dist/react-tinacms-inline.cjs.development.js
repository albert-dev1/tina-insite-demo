'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var tinacms = require('tinacms');
var reactDismissible = require('react-dismissible');
var reactBeautifulDnd = require('react-beautiful-dnd');
var reactFinalForm = require('react-final-form');
var styled = require('styled-components');
var styled__default = _interopDefault(styled);
var styles = require('@tinacms/styles');
var icons = require('@tinacms/icons');
var TextareaAutosize = _interopDefault(require('react-textarea-autosize'));
var reactDropzone = require('react-dropzone');
var reactForms = require('@tinacms/react-forms');

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

function InlineForm(_ref) {
  var form = _ref.form,
      children = _ref.children;

  var _React$useState = React.useState(''),
      focussedField = _React$useState[0],
      setFocussedField = _React$useState[1];

  var inlineFormState = React.useMemo(function () {
    return {
      form: form,
      focussedField: focussedField,
      setFocussedField: setFocussedField
    };
  }, [form, focussedField]);
  var moveArrayItem = React.useCallback(function (result) {
    if (!result.destination || !form) return;
    var name = result.type;
    var from = result.source.index;
    var to = result.destination.index;
    setFocussedField(name + "." + to);
    form.mutators.move(name, from, to);
  }, [form]);
  return React.createElement(InlineFormContext.Provider, {
    value: inlineFormState
  }, React.createElement(reactDismissible.Dismissible, {
    disabled: !focussedField,
    click: true,
    allowClickPropagation: true,
    onDismiss: function onDismiss() {
      return setFocussedField('');
    }
  }, React.createElement(reactBeautifulDnd.DragDropContext, {
    onDragEnd: moveArrayItem
  }, React.createElement("div", {
    onClick: function onClick() {
      return setFocussedField('');
    }
  }, React.createElement(tinacms.FormBuilder, {
    form: form
  }, function (_ref2) {
    var formProps = _objectWithoutPropertiesLoose(_ref2, ["form"]);

    if (typeof children !== 'function') {
      return children;
    }

    return children(_extends({}, formProps, inlineFormState));
  })))));
}
var InlineFormContext =
/*#__PURE__*/
React.createContext(null);
function useInlineForm() {
  var inlineFormContext = React.useContext(InlineFormContext);

  if (!inlineFormContext) {
    throw new Error('useInlineForm must be within an InlineFormContext');
  }

  return inlineFormContext;
}

var InlineFieldContext =
/*#__PURE__*/
React__default.createContext({});

function InlineField(_ref) {
  var name = _ref.name,
      children = _ref.children;
  var formState = useInlineForm();
  var fieldName = name;
  var parentField = React.useContext(InlineFieldContext);

  if (parentField.name) {
    fieldName = parentField.name + "." + name;
  }

  return React.createElement(reactFinalForm.Field, {
    name: fieldName
  }, function (fieldProps) {
    return children(_extends({}, fieldProps, formState));
  });
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  position: relative;\n\n  &:focus-within {\n    &:after {\n      opacity: 1;\n    }\n  }\n\n  &:hover:not(:focus-within) {\n    &:after {\n      opacity: 0.3;\n    }\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: -16px;\n    top: -16px;\n    width: calc(100% + 32px);\n    height: calc(100% + 32px);\n    border: 1px solid var(--tina-color-primary);\n    border-radius: var(--tina-radius-big);\n    opacity: 0;\n    pointer-events: none;\n    transition: all var(--tina-timing-medium) ease-out;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var InputFocusWrapper =
/*#__PURE__*/
styled__default.div(
/*#__PURE__*/
_templateObject());

function _templateObject14() {
  var data = _taggedTemplateLiteralLoose(["\n  font-family: 'Inter', sans-serif;\n  position: relative;\n  text-align: center;\n  font-size: var(--tina-font-size-1);\n  padding: 0 12px;\n  height: 34px;\n  font-weight: var(--tina-font-weight-regular);\n  width: 100%;\n  background: none;\n  cursor: pointer;\n  outline: none;\n  border: 0;\n  transition: all 85ms ease-out;\n  user-select: none;\n\n  &:hover {\n    color: var(--tina-color-primary);\n    background-color: #f6f6f9;\n  }\n  &:not(:last-child) {\n    border-bottom: 1px solid #efefef;\n  }\n"]);

  _templateObject14 = function _templateObject14() {
    return data;
  };

  return data;
}

function _templateObject13() {
  var data = _taggedTemplateLiteralLoose(["\n          transform: translate3d(-50%, -16px, 0) scale3d(1, 1, 1);\n        "]);

  _templateObject13 = function _templateObject13() {
    return data;
  };

  return data;
}

function _templateObject12() {
  var data = _taggedTemplateLiteralLoose(["\n      top: auto;\n      bottom: 20px;\n      transform-origin: 50% 100%;\n\n      ", ";\n    "]);

  _templateObject12 = function _templateObject12() {
    return data;
  };

  return data;
}

function _templateObject11() {
  var data = _taggedTemplateLiteralLoose(["\n      opacity: 1;\n      pointer-events: all;\n      transform: translate3d(-50%, 16px, 0) scale3d(1, 1, 1);\n    "]);

  _templateObject11 = function _templateObject11() {
    return data;
  };

  return data;
}

function _templateObject10() {
  var data = _taggedTemplateLiteralLoose(["\n  min-width: 192px;\n  border-radius: var(--tina-radius-big);\n  border: 1px solid var(--tina-color-grey-2);\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: flex-start;\n  position: absolute;\n  z-index: var(--tina-z-index-2);\n  top: 20px;\n  left: 50%;\n  transform: translate3d(-50%, 0, 0) scale3d(0.5, 0.5, 1);\n  opacity: 0;\n  pointer-events: none;\n  transition: all 150ms ease-out;\n  transform-origin: 50% 0;\n  box-shadow: var(--tina-shadow-big);\n  background-color: white;\n  overflow: hidden;\n\n  ", ";\n\n  ", ";\n"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteralLoose(["\n      z-index: calc(1 + var(--tina-z-index-2) - ", ");\n    "]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteralLoose(["\n      position: relative;\n    "]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteralLoose(["\n      top: 50%;\n      right: calc(-1 * ", "px);\n      transform: translate3d(50%, -50%, 0);\n    "]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteralLoose(["\n      bottom: calc(-1 * ", "px);\n      left: 50%;\n      transform: translate3d(-50%, 50%, 0);\n    "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteralLoose(["\n      top: 50%;\n      left: calc(-1 * ", "px);\n      transform: translate3d(-50%, -50%, 0);\n    "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n      top: calc(-1 * ", "px);\n      left: 50%;\n      transform: translate3d(-50%, -50%, 0);\n    "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n  position: absolute;\n  z-index: calc(var(--tina-z-index-2) - ", ");\n\n\n  ", "\n\n  ", "\n\n  ", "\n\n  ", "\n\n  ", "\n\n  ", "\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n      pointer-events: none;\n\n      svg {\n        transform: rotate(45deg);\n      }\n    "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$1() {
  var data = _taggedTemplateLiteralLoose(["\n  font-family: 'Inter', sans-serif;\n  display: flex;\n  align-items: center;\n\n  &:focus {\n    outline: none !important;\n  }\n\n  svg {\n    transition: all 150ms ease-out;\n  }\n\n  ", ";\n"]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}
function AddBlockMenu(_ref) {
  var blocks = _ref.blocks,
      addBlock = _ref.addBlock,
      position = _ref.position,
      index = _ref.index,
      offset = _ref.offset;

  var _React$useState = React.useState(false),
      isOpen = _React$useState[0],
      setIsOpen = _React$useState[1];

  var addBlockButtonRef = React.useRef(null);

  var _React$useState2 = React.useState(false),
      openTop = _React$useState2[0],
      setOpenTop = _React$useState2[1];

  var handleOpenBlockMenu = function handleOpenBlockMenu(event) {
    event.stopPropagation();
    event.preventDefault();
    var addBlockButtonElem = addBlockButtonRef.current;

    if (addBlockButtonElem !== null) {
      var menuBounding = addBlockButtonElem.getBoundingClientRect();
      var halfWindowHeight = (window.innerHeight || document.documentElement.clientHeight) / 2;
      var offsetTop = menuBounding.top;

      if (offsetTop < halfWindowHeight) {
        setOpenTop(false);
      } else {
        setOpenTop(true);
      }
    }

    if (Object.keys(blocks).length == 1) {
      var blockId = Object.keys(blocks)[0];
      addBlock(_extends({
        _template: blockId
      }, blocks[blockId].template.defaultItem));
    } else {
      setIsOpen(function (isOpen) {
        return !isOpen;
      });
    }
  };

  React.useEffect(function () {
    var inactivateBlockMenu = function inactivateBlockMenu() {
      return setIsOpen(false);
    };

    document.addEventListener('mouseup', inactivateBlockMenu, false);
    return function () {
      return document.removeEventListener('mouseup', inactivateBlockMenu);
    };
  }, []);
  return React.createElement(AddBlockWrapper, {
    index: index,
    offset: offset,
    position: position,
    isOpen: isOpen
  }, React.createElement(AddBlockButton, {
    ref: addBlockButtonRef,
    onClick: handleOpenBlockMenu,
    isOpen: isOpen,
    primary: true,
    small: true
  }, React.createElement(icons.AddIcon, null)), React.createElement(BlocksMenu, {
    openTop: openTop,
    isOpen: isOpen
  }, Object.keys(blocks).map(function (key) {
    var template = blocks[key].template;
    return React.createElement(BlockOption, {
      key: template.label,
      onClick: function onClick(event) {
        event.stopPropagation();
        event.preventDefault();
        addBlock(_extends({
          _template: key
        }, template.defaultItem));
      }
    }, template.label);
  })));
}
var AddBlockButton =
/*#__PURE__*/
styled__default(styles.IconButton)(
/*#__PURE__*/
_templateObject$1(), function (props) {
  return props.isOpen && styled.css(_templateObject2());
});
var AddBlockWrapper =
/*#__PURE__*/
styled__default.div(function (p) {
  var offset = getOffset(p.offset);
  return styled.css(_templateObject3(), p.index !== undefined ? p.index : 0, p.position === 'top' && styled.css(_templateObject4(), getOffsetY(offset)), p.position === 'left' && styled.css(_templateObject5(), getOffsetX(offset)), p.position === 'bottom' && styled.css(_templateObject6(), getOffsetY(offset)), p.position === 'right' && styled.css(_templateObject7(), getOffsetX(offset)), p.position === undefined && styled.css(_templateObject8()), p.isOpen && styled.css(_templateObject9(), p.index ? p.index : 0));
});
var BlocksMenu =
/*#__PURE__*/
styled__default.div(
/*#__PURE__*/
_templateObject10(), function (props) {
  return props.isOpen && styled.css(_templateObject11());
}, function (props) {
  return props.openTop && styled.css(_templateObject12(), props.isOpen && styled.css(_templateObject13()));
});
var BlockOption =
/*#__PURE__*/
styled__default.button(
/*#__PURE__*/
_templateObject14());

function _templateObject$2() {
  var data = _taggedTemplateLiteralLoose(["\n  padding: var(--tina-padding-small);\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n"]);

  _templateObject$2 = function _templateObject() {
    return data;
  };

  return data;
}
var InlineBlocksContext =
/*#__PURE__*/
React.createContext(null);
function useInlineBlocks() {
  var inlineBlocksContext = React.useContext(InlineBlocksContext);

  if (!inlineBlocksContext) {
    throw new Error('useInlineBlocks must be within an InlineBlocksContext');
  }

  return inlineBlocksContext;
}
function InlineBlocks(_ref) {
  var name = _ref.name,
      blocks = _ref.blocks,
      className = _ref.className,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? 'column' : _ref$direction;
  var cms = tinacms.useCMS();

  var _useState = React.useState(-1),
      activeBlock = _useState[0],
      setActiveBlock = _useState[1];

  var _useInlineForm = useInlineForm(),
      setFocussedField = _useInlineForm.setFocussedField;

  return React.createElement(InlineField, {
    name: name
  }, function (_ref2) {
    var input = _ref2.input,
        form = _ref2.form;
    var name = input.name;
    var allData = input.value || [];

    var move = function move(from, to) {
      var movement = to - from;
      setActiveBlock(function (activeBlock) {
        return activeBlock + movement;
      });
      form.mutators.move(name, from, to);
      setFocussedField(name + "." + to);
    };

    var remove = function remove(index) {
      form.mutators.remove(name, index);
      var isOnlyItem = input.value.length === 1;
      var isLastItem = input.value.length - 1 === index;

      if (isOnlyItem) {
        setFocussedField('');
      } else if (isLastItem) {
        setFocussedField(input.name + "." + (index - 1));
      } else {
        setFocussedField(input.name + "." + index);
      }
    };

    var insert = function insert(index, block) {
      form.mutators.insert(name, index, block);
      setFocussedField(name + "." + index);
    };

    return React.createElement(reactBeautifulDnd.Droppable, {
      droppableId: name,
      type: name,
      direction: direction === 'column' ? 'vertical' : 'horizontal'
    }, function (provider) {
      return React.createElement("div", {
        ref: provider.innerRef,
        className: className
      }, React.createElement(InlineBlocksContext.Provider, {
        value: {
          insert: insert,
          move: move,
          remove: remove,
          blocks: blocks,
          count: allData.length,
          activeBlock: activeBlock,
          setActiveBlock: setActiveBlock,
          direction: direction
        }
      }, allData.length < 1 && cms.enabled && React.createElement(BlocksEmptyState, null, React.createElement(AddBlockMenu, {
        addBlock: function addBlock(block) {
          return insert(0, block);
        },
        blocks: blocks
      })), allData.map(function (data, index) {
        var Block = blocks[data._template];

        if (!Block) {
          console.warn('Unrecognized Block of type:', data._template);
          return null;
        }

        var blockName = input.name + "." + index;
        return React.createElement(InlineBlock, {
          index: index,
          name: blockName,
          data: data,
          block: Block
        });
      }), provider.placeholder));
    });
  });
}
function InlineBlock(_ref3) {
  var name = _ref3.name,
      data = _ref3.data,
      block = _ref3.block,
      index = _ref3.index;
  return React.createElement(InlineFieldContext.Provider, {
    value: _extends({
      name: name
    }, block)
  }, React.createElement(block.Component, {
    data: data,
    index: index
  }));
}
var BlocksEmptyState =
/*#__PURE__*/
styled__default.div(
/*#__PURE__*/
_templateObject$2());

function _templateObject4$1() {
  var data = _taggedTemplateLiteralLoose(["\n        &:hover:after,\n        &:after {\n          opacity: 1;\n        }\n      "]);

  _templateObject4$1 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3$1() {
  var data = _taggedTemplateLiteralLoose(["\n        > * {\n          pointer-events: none;\n        }\n\n        ", " {\n          opacity: 0;\n          pointer-events: none;\n        }\n      "]);

  _templateObject3$1 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$1() {
  var data = _taggedTemplateLiteralLoose(["\n        &:hover {\n          &:after {\n            opacity: 0.3;\n          }\n        }\n      "]);

  _templateObject2$1 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$3() {
  var data = _taggedTemplateLiteralLoose(["\n    position: relative;\n    width: 100%;\n\n    ", "\n\n    ", "\n\n    &:after {\n      content: '';\n      box-sizing: border-box;\n      display: block;\n      position: absolute;\n      left: calc(-1 * ", "px);\n      top: calc(-1 * ", "px);\n      width: calc(100% + ", "px);\n      height: calc(100% + ", "px);\n      border: 1px solid var(--tina-color-primary);\n      border-radius: ", "px;\n      opacity: 0;\n      pointer-events: none;\n      transition: all var(--tina-timing-medium) ease-out;\n      box-shadow: var(--tina-shadow-big);\n    }\n\n    ", ";\n  "]);

  _templateObject$3 = function _templateObject() {
    return data;
  };

  return data;
}
var FocusRing =
/*#__PURE__*/
styled__default.div(function (p) {
  var offset = getOffset(p.offset);
  return styled.css(_templateObject$3(), !p.disableHover && styled.css(_templateObject2$1()), p.disableChildren && styled.css(_templateObject3$1(), BlocksEmptyState), getOffsetX(offset), getOffsetY(offset), getOffsetX(offset) * 2, getOffsetY(offset) * 2, p.borderRadius !== undefined ? p.borderRadius : "10", p.active && styled.css(_templateObject4$1()));
});
function getOffset(offset) {
  var DEFAULT_OFFSET = 16;
  var result = DEFAULT_OFFSET;
  var axis = {
    x: DEFAULT_OFFSET,
    y: DEFAULT_OFFSET
  };

  if (typeof offset === 'number') {
    result = offset;
  } else if (typeof offset === 'object') {
    axis.x = offset.x;
    axis.y = offset.y;
    result = axis;
  }

  return result;
}
var getOffsetX = function getOffsetX(offset) {
  return typeof offset === 'object' ? offset.x : offset;
};
var getOffsetY = function getOffsetY(offset) {
  return typeof offset === 'object' ? offset.y : offset;
};

function _templateObject$4() {
  var data = _taggedTemplateLiteralLoose(["\n  width: 100%;\n  display: block;\n  font-size: inherit;\n  font-family: inherit;\n  font-weight: inherit;\n  box-sizing: border-box;\n  color: inherit;\n  letter-spacing: inherit;\n  line-height: inherit;\n  max-width: inherit;\n  background-color: inherit;\n  text-align: inherit;\n  outline: none;\n  resize: none;\n  border: none;\n  overflow: visible;\n  position: relative;\n  -ms-overflow-style: none;\n"]);

  _templateObject$4 = function _templateObject() {
    return data;
  };

  return data;
}
/**
 * @deprecated
 * @alias InlineText
 */

var InlineTextField = InlineText;
function InlineText(_ref) {
  var name = _ref.name,
      className = _ref.className,
      _ref$focusRing = _ref.focusRing,
      focusRing = _ref$focusRing === void 0 ? true : _ref$focusRing;
  var cms = tinacms.useCMS();
  return React.createElement(InlineField, {
    name: name
  }, function (_ref2) {
    var input = _ref2.input;

    if (cms.enabled) {
      if (!focusRing) {
        return React.createElement(Input, Object.assign({
          type: "text"
        }, input, {
          className: className
        }));
      }

      return React.createElement(InputFocusWrapper, null, React.createElement(Input, Object.assign({
        type: "text"
      }, input, {
        className: className
      })));
    }

    return React.createElement(React.Fragment, null, input.value);
  });
}
var Input =
/*#__PURE__*/
styled__default.input(
/*#__PURE__*/
_templateObject$4());

function _templateObject$5() {
  var data = _taggedTemplateLiteralLoose(["\n  width: 100%;\n  word-wrap: break-word;\n  display: block;\n  font-size: inherit;\n  font-family: inherit;\n  font-weight: inherit;\n  box-sizing: border-box;\n  color: inherit;\n  letter-spacing: inherit;\n  line-height: inherit;\n  margin: 0 auto;\n  max-width: inherit;\n  background-color: inherit;\n  text-align: inherit;\n  outline: none;\n  resize: none;\n  border: none;\n  overflow: visible;\n  position: relative;\n  -ms-overflow-style: none;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n"]);

  _templateObject$5 = function _templateObject() {
    return data;
  };

  return data;
}
/**
 * @deprecated
 * @alias InlineTextarea
 */

var InlineTextareaField = InlineTextarea;
function InlineTextarea(_ref) {
  var name = _ref.name,
      className = _ref.className,
      _ref$focusRing = _ref.focusRing,
      focusRing = _ref$focusRing === void 0 ? true : _ref$focusRing;
  var cms = tinacms.useCMS();
  return React__default.createElement(InlineField, {
    name: name
  }, function (_ref2) {
    var input = _ref2.input;

    if (cms.enabled) {
      if (!focusRing) {
        return React__default.createElement(Textarea, Object.assign({
          className: className
        }, input, {
          rows: 1
        }));
      }

      return React__default.createElement(InputFocusWrapper, null, React__default.createElement(Textarea, Object.assign({
        className: className
      }, input, {
        rows: 1
      })));
    }

    return React__default.createElement(React__default.Fragment, null, input.value);
  });
}
var Textarea =
/*#__PURE__*/
styled__default(TextareaAutosize)(
/*#__PURE__*/
_templateObject$5());

/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
/**
 * @deprecated
 * @alias InlineImage
 */

var InlineImageField = InlineImage;
function InlineImage(_ref) {
  var name = _ref.name,
      previewSrc = _ref.previewSrc,
      uploadDir = _ref.uploadDir,
      parse = _ref.parse,
      children = _ref.children,
      _ref$focusRing = _ref.focusRing,
      focusRing = _ref$focusRing === void 0 ? true : _ref$focusRing;
  var cms = tinacms.useCMS();
  return React.createElement(InlineField, {
    name: name
  }, function (_ref2) {
    var handleUploadImage = function handleUploadImage(_ref3) {
      var file = _ref3[0];

      try {
        var directory = uploadDir(form);
        return Promise.resolve(cms.media.store.persist([{
          directory: directory,
          file: file
        }])).then(function (_ref4) {
          var media = _ref4[0];

          if (media === null || media === void 0 ? void 0 : media.filename) {
            input.onChange(parse(media.filename));
          } else {
            console.error('TinaCMS Image Upload Failed: This could be due to media store configuration, file size, or if the image is a duplicate (has already been uploaded).');
            cms.alerts.error('Image Upload Failed.');
          }

          return null;
        });
      } catch (e) {
        return Promise.reject(e);
      }
    };

    var input = _ref2.input,
        form = _ref2.form;

    var _previewSrc = previewSrc(form.finalForm.getState().values);

    if (cms.enabled) {
      if (!focusRing) {
        return React.createElement(InlineImageUpload, Object.assign({
          value: input.value,
          previewSrc: _previewSrc,
          onDrop: handleUploadImage
        }, input), children && function (props) {
          return children.apply(void 0, [{
            previewSrc: _previewSrc
          }].concat(props));
        });
      }

      return React.createElement(InputFocusWrapper, null, React.createElement(InlineImageUpload, Object.assign({
        value: input.value,
        previewSrc: _previewSrc,
        onDrop: handleUploadImage
      }, input), children && function (props) {
        return children.apply(void 0, [{
          previewSrc: _previewSrc
        }].concat(props));
      }));
    }

    return children ? children() : React.createElement("img", {
      src: input.value
    });
  });
}

function InlineImageUpload(_ref5) {
  var onDrop = _ref5.onDrop,
      value = _ref5.value,
      previewSrc = _ref5.previewSrc,
      children = _ref5.children;

  var _useDropzone = reactDropzone.useDropzone({
    accept: 'image/*',
    onDrop: onDrop
  }),
      getRootProps = _useDropzone.getRootProps,
      getInputProps = _useDropzone.getInputProps;

  if (!value) return React.createElement(ImagePlaceholder, null);
  return React.createElement("div", Object.assign({}, getRootProps()), React.createElement("input", Object.assign({}, getInputProps())), React.createElement("div", null, children ? children(previewSrc) : React.createElement("img", {
    src: previewSrc
  })));
}

function ImagePlaceholder() {
  // TODO: style this component
  return React.createElement("div", null, "Drag 'n' drop some files here,", React.createElement("br", null), "or click to select files");
}

function _templateObject9$1() {
  var data = _taggedTemplateLiteralLoose(["\n      pointer-events: none;\n      color: #d1d1d1;\n      fill: #d1d1d1;\n    "]);

  _templateObject9$1 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8$1() {
  var data = _taggedTemplateLiteralLoose(["\n      color: var(--tina-color-primary);\n      fill: var(--tina-color-primary);\n      background-color: rgba(53, 50, 50, 0.05);\n    "]);

  _templateObject8$1 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7$1() {
  var data = _taggedTemplateLiteralLoose(["\n  background-color: ", ";\n  color: ", ";\n  fill: ", ";\n  outline: none;\n  border: none;\n  padding: 4px 6px;\n  transition: all 85ms ease-out;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 600;\n\n  &:hover {\n    background-color: rgba(53, 50, 50, 0.09);\n  }\n  &:active {\n    color: var(--tina-color-primary);\n    fill: var(--tina-color-primary);\n    background-color: rgba(53, 50, 50, 0.05);\n  }\n  &:not(:last-child) {\n    border-right: 1px solid var(--tina-color-grey-2);\n  }\n  svg {\n    width: 26px;\n    height: auto;\n  }\n\n  ", ";\n\n  ", ";\n"]);

  _templateObject7$1 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6$1() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  top: 0;\n  background-color: white;\n  border-radius: var(--tina-radius-small);\n  box-shadow: var(--tina-shadow-big);\n  border: 1px solid var(--tina-color-grey-2);\n  overflow: hidden;\n"]);

  _templateObject6$1 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5$1() {
  var data = _taggedTemplateLiteralLoose(["\n        opacity: 1;\n        pointer-events: all;\n      "]);

  _templateObject5$1 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4$2() {
  var data = _taggedTemplateLiteralLoose(["\n        top: calc(14px - ", "px);\n        right: calc(14px - ", "px);\n        transform: translate3d(0, 0, 0);\n      "]);

  _templateObject4$2 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3$2() {
  var data = _taggedTemplateLiteralLoose(["\n    position: absolute;\n    top: calc(-", "px - 16px);\n    right: calc(-", "px - 1px);\n    opacity: 0;\n    transition: all 120ms ease-out;\n    z-index: calc(var(--tina-z-index-1) - ", ");\n    pointer-events: none;\n    transform: translate3d(0, -100%, 0);\n\n    ", "\n\n    ", "\n  "]);

  _templateObject3$2 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$2() {
  var data = _taggedTemplateLiteralLoose(["\n        opacity: 1;\n        pointer-events: all;\n      "]);

  _templateObject2$2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$6() {
  var data = _taggedTemplateLiteralLoose(["\n    opacity: 0;\n    transition: all 120ms ease-out;\n    pointer-events: none;\n\n    ", "\n  "]);

  _templateObject$6 = function _templateObject() {
    return data;
  };

  return data;
}
function BlocksControls(_ref) {
  var children = _ref.children,
      index = _ref.index,
      insetControls = _ref.insetControls,
      _ref$focusRing = _ref.focusRing,
      focusRing = _ref$focusRing === void 0 ? {} : _ref$focusRing;
  var cms = tinacms.useCMS();

  var _useInlineForm = useInlineForm(),
      focussedField = _useInlineForm.focussedField,
      setFocussedField = _useInlineForm.setFocussedField;

  var _React$useContext = React.useContext(InlineFieldContext),
      name = _React$useContext.name,
      template = _React$useContext.template;

  var _useInlineBlocks = useInlineBlocks(),
      insert = _useInlineBlocks.insert,
      move = _useInlineBlocks.move,
      remove = _useInlineBlocks.remove,
      blocks = _useInlineBlocks.blocks,
      count = _useInlineBlocks.count,
      direction = _useInlineBlocks.direction;

  var isFirst = index === 0;
  var isLast = index === count - 1;
  var blockMenuRef = React.useRef(null);
  var blockMoveUpRef = React.useRef(null);
  var blockMoveDownRef = React.useRef(null);
  var addBeforePosition = direction === 'column' ? 'top' : direction === 'row' ? 'left' : 'top';
  var addAfterPosition = direction === 'column' ? 'bottom' : direction === 'row' ? 'right' : 'bottom';

  if (cms.disabled) {
    return children;
  }

  var removeBlock = function removeBlock(event) {
    event.stopPropagation();
    event.preventDefault();
    remove(index);
  };

  var moveBlockUp = function moveBlockUp(event) {
    move(index, index - 1);
    event.stopPropagation();
    event.preventDefault();
  };

  var moveBlockDown = function moveBlockDown(event) {
    move(index, index + 1);
    event.stopPropagation();
    event.preventDefault();
  };

  var isActive = name === focussedField;
  var childIsActive = focussedField.startsWith(name);

  var handleSetActiveBlock = function handleSetActiveBlock(event) {
    var _blockMenuRef$current, _blockMoveUpRef$curre, _blockMoveDownRef$cur;

    if (((_blockMenuRef$current = blockMenuRef.current) === null || _blockMenuRef$current === void 0 ? void 0 : _blockMenuRef$current.contains(event.target)) || ((_blockMoveUpRef$curre = blockMoveUpRef.current) === null || _blockMoveUpRef$curre === void 0 ? void 0 : _blockMoveUpRef$curre.contains(event.target)) || ((_blockMoveDownRef$cur = blockMoveDownRef.current) === null || _blockMoveDownRef$cur === void 0 ? void 0 : _blockMoveDownRef$cur.contains(event.target))) {
      return;
    }

    event.stopPropagation();
    event.preventDefault();
    setFocussedField(name);
  };

  var offset = typeof focusRing === 'object' ? focusRing.offset : undefined;
  var parentName = name.split('.').slice(0, -1).join('.');
  return React.createElement(reactBeautifulDnd.Draggable, {
    type: parentName,
    draggableId: name,
    index: index
  }, function (provider) {
    return React.createElement(FocusRing, Object.assign({
      ref: provider.innerRef,
      active: focusRing && isActive,
      onClick: handleSetActiveBlock,
      offset: offset,
      borderRadius: typeof focusRing === 'object' ? focusRing.borderRadius : undefined,
      disableHover: focusRing === false ? true : childIsActive
    }, provider.draggableProps, {
      disableChildren: !isActive && !childIsActive
    }), React.createElement(AddBlockMenuWrapper, {
      active: isActive
    }, React.createElement(AddBlockMenu, {
      addBlock: function addBlock(block) {
        return insert(index, block);
      },
      blocks: blocks,
      index: index,
      offset: offset,
      position: addBeforePosition
    }), React.createElement(AddBlockMenu, {
      addBlock: function addBlock(block) {
        return insert(index + 1, block);
      },
      blocks: blocks,
      index: index,
      offset: offset,
      position: addAfterPosition
    })), React.createElement(BlockMenuWrapper, {
      offset: offset,
      ref: blockMenuRef,
      index: index,
      active: isActive,
      inset: insetControls
    }, React.createElement(BlockMenu, null, React.createElement(BlockAction, {
      ref: blockMoveUpRef,
      onClick: moveBlockUp,
      disabled: isFirst
    }, direction === 'column' && React.createElement(icons.ChevronUpIcon, null), direction === 'row' && React.createElement(icons.ChevronLeftIcon, null)), React.createElement(BlockAction, {
      ref: blockMoveDownRef,
      onClick: moveBlockDown,
      disabled: isLast
    }, direction === 'column' && React.createElement(icons.ChevronDownIcon, null), direction === 'row' && React.createElement(icons.ChevronRightIcon, null)), React.createElement(BlockAction, Object.assign({}, provider.dragHandleProps), direction === 'column' && React.createElement(icons.ReorderIcon, null), direction === 'row' && React.createElement(icons.ReorderRowIcon, null)), React.createElement(InlineSettings, {
      fields: template.fields
    }), React.createElement(BlockAction, {
      onClick: removeBlock
    }, React.createElement(icons.TrashIcon, null)))), children);
  });
}
var AddBlockMenuWrapper =
/*#__PURE__*/
styled__default.div(function (p) {
  return styled.css(_templateObject$6(), p.active && styled.css(_templateObject2$2()));
});
var BlockMenuWrapper =
/*#__PURE__*/
styled__default.div(function (p) {
  var offset = getOffset(p.offset);
  return styled.css(_templateObject3$2(), getOffsetY(offset), getOffsetX(offset), p.index ? p.index : 0, p.inset && styled.css(_templateObject4$2(), getOffsetY(offset), getOffsetX(offset)), p.active && styled.css(_templateObject5$1()));
});
var BlockMenu =
/*#__PURE__*/
styled__default.div(
/*#__PURE__*/
_templateObject6$1());
var BlockAction =
/*#__PURE__*/
styled__default.div(
/*#__PURE__*/
_templateObject7$1(), function (p) {
  return p.active ? 'rgba(53, 50, 50, 0.05)' : 'transparent';
}, function (p) {
  return p.active ? 'var(--tina-color-primary)' : 'var(--tina-color-grey-8)';
}, function (p) {
  return p.active ? 'var(--tina-color-primary)' : 'var(--tina-color-grey-8)';
}, function (props) {
  return props.active && styled.css(_templateObject8$1());
}, function (props) {
  return props.disabled && styled.css(_templateObject9$1());
});

function _templateObject2$3() {
  var data = _taggedTemplateLiteralLoose(["\n  display: block;\n  margin: 0 auto;\n  width: 100%;\n"]);

  _templateObject2$3 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$7() {
  var data = _taggedTemplateLiteralLoose(["\n  position: relative;\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: auto;\n  border-top: 1px solid var(--tina-color-grey-2);\n  background-color: #f6f6f9;\n"]);

  _templateObject$7 = function _templateObject() {
    return data;
  };

  return data;
}
function InlineSettings(_ref) {
  var fields = _ref.fields;

  var _React$useState = React.useState(false),
      open = _React$useState[0],
      setOpen = _React$useState[1];

  var noExtraFields = !(fields && fields.length);

  if (noExtraFields) {
    return null;
  }

  return React.createElement(React.Fragment, null, React.createElement(BlockAction, {
    onClick: function onClick() {
      return setOpen(function (p) {
        return !p;
      });
    }
  }, React.createElement(icons.EditIcon, null)), open && React.createElement(SettingsModal, {
    fields: fields,
    close: function close() {
      return setOpen(false);
    }
  }));
}

function SettingsModal(_ref2) {
  var fields = _ref2.fields,
      close = _ref2.close;

  var _useInlineForm = useInlineForm(),
      form = _useInlineForm.form;

  var _React$useContext = React.useContext(InlineFieldContext),
      name = _React$useContext.name;

  var _React$useState2 = React.useState(form.values),
      initialValues = _React$useState2[0];

  function handleCancel() {
    form.updateValues(initialValues);
    close();
  }

  var formFields = fields;

  if (name) {
    formFields = fields.map(function (field) {
      return _extends({}, field, {
        name: name + "." + field.name
      });
    });
  }

  var moveArrayItem = React.useCallback(function (result) {
    if (!result.destination || !form) return;
    var name = result.type;
    form.mutators.move(name, result.source.index, result.destination.index);
  }, [form]);
  return React.createElement(tinacms.Modal, {
    onClick: function onClick(e) {
      return e.stopPropagation();
    }
  }, React.createElement(tinacms.ModalPopup, null, React.createElement(tinacms.ModalHeader, {
    close: close
  }, "Settings"), React.createElement(tinacms.ModalBody, null, React.createElement(reactBeautifulDnd.DragDropContext, {
    onDragEnd: moveArrayItem
  }, React.createElement(FormBody, null, React.createElement(Wrapper, null, React.createElement(tinacms.FieldsBuilder, {
    form: form,
    fields: formFields
  }))))), React.createElement(tinacms.ModalActions, null, React.createElement(styles.Button, {
    onClick: handleCancel
  }, "Cancel"), React.createElement(styles.Button, {
    onClick: close,
    disabled: form.values === initialValues,
    primary: true
  }, "Confirm"))));
}

var FormBody =
/*#__PURE__*/
styled__default(reactForms.FormPortalProvider)(
/*#__PURE__*/
_templateObject$7());
var Wrapper =
/*#__PURE__*/
styled__default.div(
/*#__PURE__*/
_templateObject2$3());

/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
function InlineGroupControls(_ref) {
  var name = _ref.name,
      children = _ref.children,
      insetControls = _ref.insetControls,
      _ref$focusRing = _ref.focusRing,
      focusRing = _ref$focusRing === void 0 ? {} : _ref$focusRing;
  var cms = tinacms.useCMS();

  var _useInlineForm = useInlineForm(),
      focussedField = _useInlineForm.focussedField,
      setFocussedField = _useInlineForm.setFocussedField;

  var groupRef = React.useRef(null);
  var groupMenuRef = React.useRef(null);

  var _React$useContext = React.useContext(InlineFieldContext),
      fields = _React$useContext.fields;

  if (cms.disabled) {
    return children;
  }

  var active = name === focussedField;
  var childIsActive = focussedField.startsWith(name);

  var handleSetActive = function handleSetActive(event) {
    if (active || childIsActive) return;
    setFocussedField(name);
    event.stopPropagation();
    event.preventDefault();
  };

  var offset = typeof focusRing === 'object' ? focusRing.offset : undefined;
  return React.createElement(FocusRing, {
    ref: groupRef,
    active: focusRing && active,
    onClick: handleSetActive,
    offset: offset,
    borderRadius: typeof focusRing === 'object' ? focusRing.borderRadius : undefined,
    disableHover: !focusRing && childIsActive,
    disableChildren: focusRing && !active && !childIsActive
  }, React.createElement(BlockMenuWrapper, {
    ref: groupMenuRef,
    offset: offset,
    inset: insetControls,
    active: active
  }, React.createElement(BlockMenu, null, React.createElement(InlineSettings, {
    fields: fields
  }))), children);
}

/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
function InlineGroup(_ref) {
  var name = _ref.name,
      children = _ref.children,
      _ref$fields = _ref.fields,
      fields = _ref$fields === void 0 ? [] : _ref$fields,
      insetControls = _ref.insetControls,
      focusRing = _ref.focusRing;
  return React.createElement(InlineFieldContext.Provider, {
    value: {
      name: name,
      fields: fields
    }
  }, React.createElement(InlineGroupControls, {
    name: name,
    insetControls: insetControls,
    focusRing: focusRing
  }, children));
}

/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
/**
 * @deprecated
 */

function BlockText(props) {
  return React.createElement(InlineText, Object.assign({}, props, {
    focusRing: false
  }));
}

/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
var BlockField = InlineField;

/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
/**
 * @deprecated
 */

function BlockTextarea(props) {
  return React.createElement(InlineTextarea, Object.assign({}, props, {
    focusRing: false
  }));
}

/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
/**
 * @deprecated
 */

function BlockImage(props) {
  return React.createElement(InlineImage, Object.assign({}, props, {
    focusRing: false
  }));
}

exports.AddBlockMenu = AddBlockMenu;
exports.BlockAction = BlockAction;
exports.BlockField = BlockField;
exports.BlockImage = BlockImage;
exports.BlockMenu = BlockMenu;
exports.BlockMenuWrapper = BlockMenuWrapper;
exports.BlockText = BlockText;
exports.BlockTextarea = BlockTextarea;
exports.BlocksControls = BlocksControls;
exports.BlocksEmptyState = BlocksEmptyState;
exports.FocusRing = FocusRing;
exports.InlineBlock = InlineBlock;
exports.InlineBlocks = InlineBlocks;
exports.InlineBlocksContext = InlineBlocksContext;
exports.InlineField = InlineField;
exports.InlineFieldContext = InlineFieldContext;
exports.InlineForm = InlineForm;
exports.InlineFormContext = InlineFormContext;
exports.InlineGroup = InlineGroup;
exports.InlineGroupControls = InlineGroupControls;
exports.InlineImage = InlineImage;
exports.InlineImageField = InlineImageField;
exports.InlineSettings = InlineSettings;
exports.InlineText = InlineText;
exports.InlineTextField = InlineTextField;
exports.InlineTextarea = InlineTextarea;
exports.InlineTextareaField = InlineTextareaField;
exports.InputFocusWrapper = InputFocusWrapper;
exports.getOffset = getOffset;
exports.getOffsetX = getOffsetX;
exports.getOffsetY = getOffsetY;
exports.useInlineBlocks = useInlineBlocks;
exports.useInlineForm = useInlineForm;
//# sourceMappingURL=react-tinacms-inline.cjs.development.js.map
